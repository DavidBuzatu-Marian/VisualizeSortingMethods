{"version":3,"sources":["AlgorithmsSorts/AlgorithmsSorts.js","VisualizeSorts/VisualizeSorts.jsx","App.js","serviceWorker.js","index.js"],"names":["getQuickSortAnimations","array","animations","lenght","quickSort","items","left","right","index","length","middleCoord","Math","floor","pivot","i","j","indexOf","push","swap","partition","leftIndex","rightIndex","temp","getMergeSortAnimations","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","getBubbleSortAnimations","arrayLength","bubbleSort","VisualizeSorts","props","onChange","e","persist","setState","target","name","value","initArray","state","animationSpeed","isAnimated","arraySize","this","window","addEventListener","resize","bind","removeEventListener","windowWidth","innerWidth","initArrayOnWindowWidth","randomIntegerFromInterval","animationsLength","nrTimeout","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","arrayBar","indexOrHeight","getElementsByName","setAttribute","getAttribute","barWidth","id","className","zIndex","width","href","src","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","htmlFor","disabled","max","min","onClick","animateMergeSort","animateQuickSort","animateBubbleSort","map","idx","key","Component","random","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58dba2c2.chunk.js","sourcesContent":["export function getQuickSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.lenght < 1) {\r\n    return array;\r\n  }\r\n  quickSort(array, animations, 0, array.length - 1);\r\n  return animations;\r\n}\r\n\r\nfunction swap(items, animations, leftIndex, rightIndex) {\r\n  // push the index and the height of the element we swap\r\n  animations.push([leftIndex, items[rightIndex], 0]);\r\n  animations.push([rightIndex, items[leftIndex], 0]);\r\n  let temp = items[leftIndex];\r\n  items[leftIndex] = items[rightIndex];\r\n  items[rightIndex] = temp;\r\n}\r\nfunction partition(items, animations, left, right) {\r\n  let middleCoord = Math.floor((right + left) / 2);\r\n  let pivot = items[middleCoord],\r\n    i = left,\r\n    j = right;\r\n  while (i <= j) {\r\n    middleCoord = items.indexOf(pivot);\r\n    while (items[i] < pivot) {\r\n      animations.push([i, middleCoord, 1]);\r\n      animations.push([i, middleCoord, 1]);\r\n      i++;\r\n    }\r\n    while (items[j] > pivot) {\r\n      animations.push([j, middleCoord, 1]);\r\n      animations.push([j, middleCoord, 1]);\r\n      j--;\r\n    }\r\n    if (i <= j) {\r\n      swap(items, animations, i, j);\r\n      i++;\r\n      j--;\r\n    }\r\n  }\r\n  return i;\r\n}\r\n\r\nfunction quickSort(items, animations, left, right) {\r\n  var index;\r\n  if (items.length > 1) {\r\n    index = partition(items, animations, left, right);\r\n    if (left < index - 1) {\r\n      quickSort(items, animations, left, index - 1);\r\n    }\r\n    if (index < right) {\r\n      quickSort(items, animations, index, right);\r\n    }\r\n  }\r\n  return items;\r\n}\r\n\r\n// algorithm from algoexpert.com for optimized merge sort\r\nexport function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\nexport function getBubbleSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length < 2) {\r\n    return array;\r\n  }\r\n\r\n  bubbleSort(array, array.length, animations);\r\n  return animations;\r\n}\r\n\r\nfunction bubbleSort(array, arrayLength, animations) {\r\n  for (let i = 0; i < arrayLength; i++) {\r\n    for (let j = 0; j < arrayLength - 1 - i; j++) {\r\n      animations.push([j, j + 1, 1]);\r\n      animations.push([j, j + 1, 1]);\r\n      if (array[j] > array[j + 1]) {\r\n        swap(array, animations, j, j + 1);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {\r\n  getQuickSortAnimations,\r\n  getMergeSortAnimations,\r\n  getBubbleSortAnimations\r\n} from \"../AlgorithmsSorts/AlgorithmsSorts.js\";\r\n\r\n// This is the main color of the array bars.\r\nconst PRIMARY_COLOR = \"#c2e8ce\";\r\n// This is the color of array bars that are being compared throughout the animations.\r\nconst SECONDARY_COLOR = \"#be7575\";\r\n// This is the color of the pivot\r\nconst PIVOT_COLOR = \"yellow\";\r\n\r\nexport default class VisualizeSorts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animationSpeed: 1,\r\n      isAnimated: false,\r\n      array: [],\r\n      arraySize: 200\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initArray();\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n    this.resize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.resize);\r\n  }\r\n\r\n  resize() {\r\n    const windowWidth = window.innerWidth;\r\n    this.initArrayOnWindowWidth(windowWidth);\r\n  }\r\n\r\n  initArray() {\r\n    const array = [];\r\n    for (let i = 0; i < this.state.arraySize; i++) {\r\n      array.push(randomIntegerFromInterval(5, 600));\r\n    }\r\n    this.setState({ array });\r\n  }\r\n\r\n  animateMergeSort() {\r\n    this.setState({\r\n      isAnimated: true\r\n    });\r\n    const animationSpeed = this.state.animationSpeed;\r\n    const auxiliaryArray = this.state.array.slice();\r\n    const animations = getMergeSortAnimations(auxiliaryArray);\r\n    const animationsLength = animations.length;\r\n    let nrTimeout = 0;\r\n    for (let i = 0; i < animationsLength; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * animationSpeed);\r\n      } else {\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n\r\n          if (nrTimeout === animationsLength) {\r\n            this.setState({ isAnimated: false, array: auxiliaryArray });\r\n          }\r\n        }, i * animationSpeed);\r\n      }\r\n    }\r\n  }\r\n\r\n  animateQuickSort() {\r\n    this.setState({\r\n      isAnimated: true\r\n    });\r\n    const animationSpeed = this.state.animationSpeed;\r\n    const auxiliaryArray = this.state.array.slice();\r\n    const animations = getQuickSortAnimations(auxiliaryArray);\r\n    const animationsLength = animations.length;\r\n    let nrTimeout = 0;\r\n    for (let i = 0; i < animationsLength; i++) {\r\n      let pivotCoord = -1;\r\n      const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n      const [barOneIdx, indexOrHeight, isComparisson] = animations[i];\r\n      if (isComparisson === 1) {\r\n        pivotCoord = indexOrHeight;\r\n        const barOneStyle = arrayBar[barOneIdx].style;\r\n        const barTwoStyle = arrayBar[indexOrHeight].style;\r\n        const color = i % 2 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * animationSpeed);\r\n      } else {\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          const barOneStyle = arrayBar[barOneIdx].style;\r\n          barOneStyle.height = `${indexOrHeight}px`;\r\n          // if (pivotCoord !== -1) {\r\n          //   const barPivot = document.getElementsByName(`${pivotCoord}`)[0];\r\n          //   barPivot.setAttribute(\r\n          //     \"name\",\r\n          //     arrayBar[barOneIdx].getAttribute(\"name\")\r\n          //   );\r\n          //   barPivot.style.color = PRIMARY_COLOR;\r\n          //   pivotCoord = -1;\r\n          // } else {\r\n          const barPivot = document.getElementsByName(`${indexOrHeight}`)[0];\r\n          barPivot.setAttribute(\r\n            \"name\",\r\n            arrayBar[barOneIdx].getAttribute(\"name\")\r\n          );\r\n          arrayBar[barOneIdx].setAttribute(\"name\", `${indexOrHeight}`);\r\n\r\n          if (nrTimeout === animationsLength) {\r\n            this.setState({ isAnimated: false, array: auxiliaryArray });\r\n          }\r\n        }, i * animationSpeed);\r\n      }\r\n    }\r\n  }\r\n\r\n  animateBubbleSort() {\r\n    this.setState({\r\n      isAnimated: true\r\n    });\r\n    const animationSpeed = this.state.animationSpeed;\r\n    const auxiliaryArray = this.state.array.slice();\r\n    const animations = getBubbleSortAnimations(auxiliaryArray);\r\n    const animationsLength = animations.length;\r\n    let nrTimeout = 0;\r\n    for (let i = 0; i < animationsLength; i++) {\r\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\r\n      const [barOneIdx, indexOrHeight, isComparisson] = animations[i];\r\n      if (isComparisson === 1) {\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[indexOrHeight].style;\r\n        const color = i % 2 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n          if (nrTimeout === animationsLength) {\r\n            this.setState({ isAnimated: false, array: auxiliaryArray });\r\n          }\r\n        }, i * animationSpeed);\r\n      } else {\r\n        setTimeout(() => {\r\n          nrTimeout++;\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${indexOrHeight}px`;\r\n          if (nrTimeout === animationsLength) {\r\n            this.setState({ isAnimated: false, array: auxiliaryArray });\r\n          }\r\n        }, i * animationSpeed);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    e.persist();\r\n    this.setState(\r\n      { [e.target.name]: e.target.value <= 200 ? e.target.value : 200 },\r\n      () => {\r\n        if (e.target.name === \"arraySize\" && e.target.value <= 200) {\r\n          this.initArray();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  initArrayOnWindowWidth(windowWidth) {\r\n    if (windowWidth < 756 && windowWidth > 568) {\r\n      this.setState({ arraySize: randomIntegerFromInterval(5, 40) });\r\n      this.initArray();\r\n    } else if (windowWidth < 568) {\r\n      this.setState({ arraySize: randomIntegerFromInterval(5, 20) });\r\n      this.initArray();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { array, isAnimated, animationSpeed, arraySize } = this.state;\r\n    const barWidth = array.length > 90 ? 3 : 10;\r\n    return (\r\n      <Fragment>\r\n        <nav\r\n          id=\"navbar\"\r\n          className={` navbar navbar-expand-lg navbar-light bg-light fixed-top`}\r\n          style={{ zIndex: \"1\", width: \"100%\" }}\r\n        >\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            <img\r\n              id=\"homeLink\"\r\n              src=\"./logo512.png\"\r\n              alt=\"VisualizeSortingMethods\"\r\n              height=\"80px\"\r\n              width=\"80px\"\r\n            />\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarTogglerDemo01\"\r\n            aria-controls=\"navbarTogglerDemo01\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <div className=\"form-group p-3\">\r\n                  <label htmlFor=\"animationSpeed\" className=\"\">\r\n                    AnimationSpeed (in ms)\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    id=\"animationSpeed\"\r\n                    name=\"animationSpeed\"\r\n                    value={animationSpeed}\r\n                    onChange={this.onChange}\r\n                    disabled={isAnimated}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <div className=\"form-group p-3\">\r\n                  <label htmlFor=\"arraySize\" className=\"\">\r\n                    ArraySize (in ms)\r\n                  </label>\r\n                  <input\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    max=\"200\"\r\n                    min=\"1\"\r\n                    id=\"arraySize\"\r\n                    name=\"arraySize\"\r\n                    value={arraySize}\r\n                    onChange={this.onChange}\r\n                    disabled={isAnimated}\r\n                  />\r\n                </div>\r\n              </li>\r\n              <button\r\n                className=\"navbar-function-link my-auto p-3 btn\"\r\n                onClick={() => this.initArray()}\r\n                disabled={isAnimated}\r\n              >\r\n                <li className=\"nav-item\">Generate new array</li>\r\n              </button>\r\n              <button\r\n                className=\"navbar-function-link my-auto p-3 btn\"\r\n                onClick={() => this.animateMergeSort()}\r\n                disabled={isAnimated}\r\n              >\r\n                <li className=\"nav-item\">MergeSort</li>\r\n              </button>\r\n              <button\r\n                className=\"navbar-function-link my-auto p-3 btn\"\r\n                onClick={() => this.animateQuickSort()}\r\n                disabled={isAnimated}\r\n              >\r\n                <li className=\"nav-item\">QuickSort</li>\r\n              </button>\r\n              <button\r\n                href=\"#\"\r\n                className=\"navbar-function-link my-auto p-3 btn\"\r\n                onClick={() => this.animateBubbleSort()}\r\n                disabled={isAnimated}\r\n              >\r\n                <li className=\"nav-item\">BubbleSort</li>\r\n              </button>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n        <div className=\"margin-top-navbar h-100 position-absolute w-100 mt-5 pt-5\">\r\n          <div className=\"container align-bars-center\">\r\n            {array.map((value, idx) => (\r\n              <div\r\n                className=\"array-bar\"\r\n                key={idx}\r\n                name={value}\r\n                style={{\r\n                  height: `${value}px`,\r\n                  width: `${barWidth}px`\r\n                }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntegerFromInterval(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","import React, { Fragment } from \"react\";\nimport VisualizeSorts from \"./VisualizeSorts/VisualizeSorts\";\nimport \"./VisualizeSorts/VisualizeSorts.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Fragment>\n        <VisualizeSorts></VisualizeSorts>\n      </Fragment>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}